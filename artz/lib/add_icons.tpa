DEFINE_ACTION_FUNCTION ADD_ICONS
  INT_VAR   rename            = "0"       //rename icons based on spell_res?  0 = no; 1 = yes
            port_text         = "-1"    //strref of portrait for port icon (optional, but pretty nec for adding port icons)
            add_port_icon     = "0"     //Add port icon to spell (be careful) 0= no, 1= yes (all), 2= yes, but ONLY global
//          scroll_store      = "0"       //add scroll to stores?  We'll see

  STR_VAR   pathA             = "SAME"    //path to "A" icon (req for scroll--otherwise optional)
            pathB             = "SAME"    //path to "B" icon (optional)
            pathC             = "SAME"    //path to "C" icon (optional)
            pathP             = "SAME"    //path to portrait icon (optional)
            port_exist        = "SAME"    //portrait icon if already in game(optional)
            scroll            = "SAME"    //filename of scroll--will create a scroll if pathA AND this field not "SAME" (optional)
            spell_name        = "SAME"    //filename of spell that is getting the icons--assumes spell was added prior (required)
  RET       iconA                         //name of iconA
            iconB                         //name of iconB
            iconC                         //name of iconC
            iconP                         //name of portrait icon
            port_icon                     //Returns portrait icon line for removal/protection/ALTER_EFFECT, etc.
//          scroll_icon                   //Returns "A" icon for scrolls--needed?

BEGIN
 
 ACTION_IF ("%spell_name%" STRING_COMPARE_CASE "SAME" != 0) BEGIN //

//add icon A
   ACTION_IF ("%pathA%" STRING_COMPARE_CASE "SAME" != 0) BEGIN    //
     ACTION_IF (rename > 0)  BEGIN
      COPY ~%pathA%~ ~override/%spell_name%A.BAM~
        INNER_PATCH_SAVE iconA ~%SOURCE_RES%~ BEGIN END //icon a named %iconA%
     END //end icon bams ~same name as spl
     ACTION_IF (rename = 0)  BEGIN
      COPY ~%pathA%~ ~override~
        INNER_PATCH_SAVE iconA ~%SOURCE_RES%~ BEGIN END //icon a named %iconA%
     END //end icon bams ~not same name as spl
   END //end actual pathA
//if no A
   ACTION_IF ("%pathA%" STRING_COMPARE_CASE "SAME" = 0) BEGIN    //
        OUTER_SPRINT ~iconA~ ~nil~ //icon a named %iconA%
   END //if no A
//add icon B
   ACTION_IF ("%pathB%" STRING_COMPARE_CASE "SAME" != 0) BEGIN    //
     ACTION_IF (rename > 0)  BEGIN
      COPY ~%pathB%~ ~override/%spell_name%B.BAM~
        INNER_PATCH_SAVE iconB ~%SOURCE_RES%~ BEGIN END //icon a named %iconB%
     END //end icon bams ~same name as spl
     ACTION_IF (rename = 0)  BEGIN
      COPY ~%pathB%~ ~override~
        INNER_PATCH_SAVE iconB ~%SOURCE_RES%~ BEGIN END //icon a named %iconB%
     END //end icon bams ~not same name as spl
   END //end actual pathB
//if no B
   ACTION_IF ("%pathB%" STRING_COMPARE_CASE "SAME" = 0) BEGIN    //
        OUTER_SPRINT ~iconB~ ~nil~ //icon a named %iconB%
   END //if no B

//add icon C
   ACTION_IF ("%pathC%" STRING_COMPARE_CASE "SAME" != 0) BEGIN    //
     ACTION_IF (rename > 0)  BEGIN
      COPY ~%pathC%~ ~override/%spell_name%C.BAM~
        INNER_PATCH_SAVE iconC ~%SOURCE_RES%~ BEGIN END //icon a named %iconC%
     END //end icon bams ~same name as spl
     ACTION_IF (rename = 0)  BEGIN
      COPY ~%pathC%~ ~override~
        INNER_PATCH_SAVE iconC ~%SOURCE_RES%~ BEGIN END //icon a named %iconC%
     END //end icon bams ~not same name as spl
   END //end actual pathC
//if no C
   ACTION_IF ("%pathC%" STRING_COMPARE_CASE "SAME" = 0) BEGIN    //
        OUTER_SPRINT ~iconC~ ~nil~ //icon a named %iconA%
   END //if no C
//Portrait icon
   ACTION_IF ("%pathP%" STRING_COMPARE_CASE "SAME" != 0) BEGIN    //
      COPY ~%pathP%~ ~override~
       SET strref = %port_text% //
        INNER_PATCH_SAVE iconP ~%SOURCE_RES%~ BEGIN END //icon a named %iconP%

//Add icon to STATEDEC.2da (Thanks kjeron and argent77!!!)
 COPY_EXISTING ~STATDESC.2DA~ override
  COUNT_2DA_COLS cols
  COUNT_2DA_ROWS cols rows
  SET max = 0
  FOR (i = 0; i < rows; ++i) BEGIN
   READ_2DA_ENTRY i 0 cols num
   PATCH_IF num > max BEGIN max = num END
  END
SET max += 1
INSERT_2DA_ROW rows cols ~%max%   %strref%   %iconP%~
PRETTY_PRINT_2DA
        OUTER_SPRINT ~port_icon~ ~max~ //line # for icon

   END //end add portrait icon path
   ACTION_IF ("%port_exist%" STRING_COMPARE_CASE "SAME" != 0) BEGIN    // portrait is in game (pathP sould be default!)
        COPY_EXISTING ~%port_exist%.BAM~ override
            SET strref = %port_text% //
               INNER_PATCH_SAVE iconP ~%SOURCE_RES%~ BEGIN END //icon a named %iconP%
//Add icon to STATEDEC.2da (Thanks kjeron and argent77!!!)
 COPY_EXISTING ~STATDESC.2DA~ override
  COUNT_2DA_COLS cols
  COUNT_2DA_ROWS cols rows
  SET max = 0
  FOR (i = 0; i < rows; ++i) BEGIN
   READ_2DA_ENTRY i 0 cols num
   PATCH_IF num > max BEGIN max = num END
  END
SET max += 1
INSERT_2DA_ROW rows cols ~%max%   %strref%   %iconP%~
PRETTY_PRINT_2DA
        OUTER_SPRINT ~port_icon~ ~max~ //line # for icon
   END //end port icon in game

//if no P
   ACTION_IF ("%pathP%" STRING_COMPARE_CASE "SAME" = 0) AND ("%port_exist%" STRING_COMPARE_CASE "SAME" = 0) BEGIN    //
        OUTER_SPRINT ~iconP~ ~nil~ //icon a named %iconP%
        OUTER_SPRINT ~port_icon~ ~nil~ //line # for icon
   END //if no A


//now, add stuff to spell
//B
   ACTION_IF ("%pathB%" STRING_COMPARE_CASE "SAME" != 0) BEGIN    //
      COPY_EXISTING - ~%spell_name%.spl~ ~override~
        LPF ALTER_SPELL_HEADER INT_VAR STR_VAR icon = EVAL  ~%iconB%~ END
   END //path B
//Now C
   ACTION_IF ("%pathC%" STRING_COMPARE_CASE "SAME" != 0) BEGIN    //
      COPY_EXISTING - ~%spell_name%.spl~ ~override~
          WRITE_EVALUATED_ASCII 0x003a ~%iconC%~
   END
//add port icon?????? 
     ACTION_IF (add_port_icon > 0)  BEGIN
           ACTION_IF (add_port_icon = 1)  BEGIN   //add port icon to all
                 LPF ALTER_EFFECT INT_VAR match_opcode = 142 parameter2 = %max% END
           END
           ACTION_IF (add_port_icon = 2)  BEGIN   //add port icon Global ONLY
                 LPF ALTER_EFFECT INT_VAR match_opcode = 142 check_headers = 0 parameter2 = %max% END
           END
     END

 END//end required spell_name
 ELSE BEGIN
 		FAIL @1011  //You must specify a spell file name for this function to work
 END //end fail
END //end function